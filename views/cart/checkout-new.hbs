<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{title}}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .gradient-bg {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 40px 0;
        }
        .checkout-container {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            padding: 30px;
        }
        .order-summary {
            background: #f8f9fa;
            border-radius: 15px;
            padding: 20px;
            border: 1px solid #e9ecef;
        }
        .form-control {
            border-radius: 10px;
            border: 2px solid #e9ecef;
            padding: 12px 15px;
        }
        .form-control:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        }
        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            border-radius: 25px;
            padding: 12px 30px;
            font-weight: 600;
            transition: all 0.3s ease;
        }
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }
        .card-type-icon {
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            font-size: 24px;
            color: #6c757d;
        }
        .card-input-container {
            position: relative;
        }
        .valid-feedback {
            display: block;
            color: #28a745;
        }
        .invalid-feedback {
            display: block;
            color: #dc3545;
        }
        .payment-method-selector {
            display: flex;
            gap: 15px;
            margin-bottom: 20px;
        }
        .payment-method-option {
            flex: 1;
            padding: 15px;
            border: 2px solid #e9ecef;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
            text-align: center;
        }
        .payment-method-option:hover {
            border-color: #667eea;
        }
        .payment-method-option.active {
            border-color: #667eea;
            background: rgba(102, 126, 234, 0.1);
        }
        .loading-spinner {
            display: none;
        }
        .processing {
            opacity: 0.7;
            pointer-events: none;
        }
        .order-item {
            display: flex;
            align-items: center;
            padding: 10px 0;
            border-bottom: 1px solid #e9ecef;
        }
        .order-item:last-child {
            border-bottom: none;
        }
        .order-item img {
            width: 50px;
            height: 50px;
            object-fit: cover;
            border-radius: 8px;
            margin-right: 15px;
        }
    </style>
</head>
<body class="gradient-bg">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-10">
                <div class="checkout-container">
                    <div class="row">
                        <!-- Formulario de Checkout -->
                        <div class="col-lg-8">
                            <h2 class="mb-4">
                                <i class="fas fa-credit-card me-2"></i>
                                Finalizar Compra
                            </h2>

                            <form id="checkoutForm">
                                <!-- Información de Facturación -->
                                <div class="card mb-4">
                                    <div class="card-header">
                                        <h5><i class="fas fa-user me-2"></i>Información de Facturación</h5>
                                    </div>
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-md-6 mb-3">
                                                <label for="firstName" class="form-label">Nombre</label>
                                                <input type="text" class="form-control" id="firstName" name="firstName" required>
                                            </div>
                                            <div class="col-md-6 mb-3">
                                                <label for="lastName" class="form-label">Apellido</label>
                                                <input type="text" class="form-control" id="lastName" name="lastName" required>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6 mb-3">
                                                <label for="email" class="form-label">Email</label>
                                                <input type="email" class="form-control" id="email" name="email" required>
                                            </div>
                                            <div class="col-md-6 mb-3">
                                                <label for="phone" class="form-label">Teléfono</label>
                                                <input type="tel" class="form-control" id="phone" name="phone" required>
                                            </div>
                                        </div>
                                        <div class="mb-3">
                                            <label for="address" class="form-label">Dirección</label>
                                            <input type="text" class="form-control" id="address" name="address" required>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6 mb-3">
                                                <label for="city" class="form-label">Ciudad</label>
                                                <input type="text" class="form-control" id="city" name="city" required>
                                            </div>
                                            <div class="col-md-3 mb-3">
                                                <label for="postalCode" class="form-label">Código Postal</label>
                                                <input type="text" class="form-control" id="postalCode" name="postalCode" required>
                                            </div>
                                            <div class="col-md-3 mb-3">
                                                <label for="country" class="form-label">País</label>
                                                <select class="form-control" id="country" name="country" required>
                                                    <option value="">Seleccionar...</option>
                                                    <option value="MX">México</option>
                                                    <option value="US">Estados Unidos</option>
                                                    <option value="CA">Canadá</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Información de Pago -->
                                <div class="card mb-4">
                                    <div class="card-header">
                                        <h5><i class="fas fa-credit-card me-2"></i>Información de Pago</h5>
                                    </div>
                                    <div class="card-body">
                                        <!-- Selector de Método de Pago -->
                                        <div class="payment-method-selector">
                                            <div class="payment-method-option active" data-type="credit">
                                                <i class="fas fa-credit-card fa-2x mb-2"></i>
                                                <div>Tarjeta de Crédito</div>
                                            </div>
                                            <div class="payment-method-option" data-type="debit">
                                                <i class="fas fa-money-check-alt fa-2x mb-2"></i>
                                                <div>Tarjeta de Débito</div>
                                            </div>
                                        </div>

                                        <div class="mb-3">
                                            <label for="cardholderName" class="form-label">Nombre del Titular</label>
                                            <input type="text" class="form-control" id="cardholderName" name="cardholderName" required>
                                        </div>

                                        <div class="mb-3">
                                            <label for="cardNumber" class="form-label">Número de Tarjeta</label>
                                            <div class="card-input-container">
                                                <input type="text" class="form-control" id="cardNumber" name="cardNumber" 
                                                       placeholder="1234 5678 9012 3456" maxlength="19" required>
                                                <i class="card-type-icon" id="cardTypeIcon"></i>
                                            </div>
                                            <div class="invalid-feedback" id="cardNumberError"></div>
                                            <div class="valid-feedback" id="cardNumberValid"></div>
                                        </div>

                                        <div class="row">
                                            <div class="col-md-6 mb-3">
                                                <label for="expiryDate" class="form-label">Fecha de Expiración</label>
                                                <input type="text" class="form-control" id="expiryDate" name="expiryDate" 
                                                       placeholder="MM/AA" maxlength="5" required>
                                                <div class="invalid-feedback" id="expiryDateError"></div>
                                            </div>
                                            <div class="col-md-6 mb-3">
                                                <label for="cvv" class="form-label">CVV</label>
                                                <input type="text" class="form-control" id="cvv" name="cvv" 
                                                       placeholder="123" maxlength="4" required>
                                                <div class="invalid-feedback" id="cvvError"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="d-grid gap-2">
                                    <button type="submit" class="btn btn-primary btn-lg">
                                        <span class="button-text">
                                            <i class="fas fa-lock me-2"></i>
                                            Procesar Pago - ${{total}}
                                        </span>
                                        <span class="loading-spinner">
                                            <i class="fas fa-spinner fa-spin me-2"></i>
                                            Procesando...
                                        </span>
                                    </button>
                                </div>
                            </form>
                        </div>

                        <!-- Resumen del Pedido -->
                        <div class="col-lg-4">
                            <div class="order-summary">
                                <h5 class="mb-3">
                                    <i class="fas fa-shopping-bag me-2"></i>
                                    Resumen del Pedido
                                </h5>

                                <!-- Items del Pedido -->
                                <div class="order-items mb-3">
                                    {{#each cartItems}}
                                    <div class="order-item">
                                        <img src="{{image}}" alt="{{name}}" onerror="this.src='/images/placeholder.jpg'">
                                        <div class="flex-grow-1">
                                            <h6 class="mb-1">{{name}}</h6>
                                            <small class="text-muted">Cantidad: {{quantity}}</small>
                                        </div>
                                        <div class="text-end">
                                            <strong>${{price}}</strong>
                                        </div>
                                    </div>
                                    {{/each}}
                                </div>

                                <!-- Totales -->
                                <div class="order-totals">
                                    <div class="d-flex justify-content-between mb-2">
                                        <span>Subtotal:</span>
                                        <span>${{subtotal}}</span>
                                    </div>
                                    <div class="d-flex justify-content-between mb-2">
                                        <span>Envío:</span>
                                        <span>${{shipping}}</span>
                                    </div>
                                    <div class="d-flex justify-content-between mb-2">
                                        <span>Impuestos:</span>
                                        <span>${{tax}}</span>
                                    </div>
                                    <hr>
                                    <div class="d-flex justify-content-between mb-3">
                                        <strong>Total:</strong>
                                        <strong>${{total}}</strong>
                                    </div>
                                </div>

                                <!-- Badges de Seguridad -->
                                <div class="security-badges text-center">
                                    <div class="mb-2">
                                        <i class="fas fa-lock text-success me-2"></i>
                                        <small>Pago Seguro SSL</small>
                                    </div>
                                    <div class="mb-2">
                                        <i class="fas fa-shield-alt text-success me-2"></i>
                                        <small>Protección de Datos</small>
                                    </div>
                                    <div>
                                        <i class="fas fa-truck text-info me-2"></i>
                                        <small>Envío Gratuito > $1000</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Validación y formateo de tarjetas de crédito
        document.addEventListener('DOMContentLoaded', function() {
            const cardNumber = document.getElementById('cardNumber');
            const expiryDate = document.getElementById('expiryDate');
            const cvv = document.getElementById('cvv');
            const cardTypeIcon = document.getElementById('cardTypeIcon');
            const checkoutForm = document.getElementById('checkoutForm');
            const paymentMethodOptions = document.querySelectorAll('.payment-method-option');

            // Selector de método de pago
            paymentMethodOptions.forEach(option => {
                option.addEventListener('click', function() {
                    paymentMethodOptions.forEach(opt => opt.classList.remove('active'));
                    this.classList.add('active');
                });
            });

            // Formateo de número de tarjeta
            cardNumber.addEventListener('input', function(e) {
                let value = e.target.value.replace(/\s+/g, '').replace(/[^0-9]/gi, '');
                let matches = value.match(/\d{4,16}/g);
                let match = matches && matches[0] || '';
                let parts = [];

                for (let i = 0, len = match.length; i < len; i += 4) {
                    parts.push(match.substring(i, i + 4));
                }

                if (parts.length) {
                    e.target.value = parts.join(' ');
                }

                // Detectar tipo de tarjeta
                detectCardType(value);
                validateCardNumber(value);
            });

            // Formateo de fecha de expiración
            expiryDate.addEventListener('input', function(e) {
                let value = e.target.value.replace(/\D/g, '');
                if (value.length >= 2) {
                    value = value.substring(0, 2) + '/' + value.substring(2, 4);
                }
                e.target.value = value;
                validateExpiryDate(value);
            });

            // Validación de CVV
            cvv.addEventListener('input', function(e) {
                let value = e.target.value.replace(/\D/g, '');
                e.target.value = value;
                validateCVV(value);
            });

            // Detectar tipo de tarjeta
            function detectCardType(cardNumber) {
                const cardTypes = {
                    visa: /^4/,
                    mastercard: /^5[1-5]/,
                    amex: /^3[47]/,
                    discover: /^6(?:011|5)/
                };

                cardTypeIcon.className = 'card-type-icon';
                
                for (let type in cardTypes) {
                    if (cardTypes[type].test(cardNumber)) {
                        switch(type) {
                            case 'visa':
                                cardTypeIcon.className += ' fab fa-cc-visa';
                                cardTypeIcon.style.color = '#1a1f71';
                                break;
                            case 'mastercard':
                                cardTypeIcon.className += ' fab fa-cc-mastercard';
                                cardTypeIcon.style.color = '#eb001b';
                                break;
                            case 'amex':
                                cardTypeIcon.className += ' fab fa-cc-amex';
                                cardTypeIcon.style.color = '#006fcf';
                                break;
                            case 'discover':
                                cardTypeIcon.className += ' fab fa-cc-discover';
                                cardTypeIcon.style.color = '#ff6000';
                                break;
                        }
                        break;
                    }
                }
            }

            // Validar número de tarjeta (Algoritmo de Luhn)
            function validateCardNumber(cardNumber) {
                const cleanNumber = cardNumber.replace(/\s+/g, '');
                const errorElement = document.getElementById('cardNumberError');
                const validElement = document.getElementById('cardNumberValid');
                
                if (cleanNumber.length === 0) {
                    cardNumber.classList.remove('is-invalid', 'is-valid');
                    return;
                }

                if (cleanNumber.length < 13 || cleanNumber.length > 19) {
                    cardNumber.classList.add('is-invalid');
                    cardNumber.classList.remove('is-valid');
                    errorElement.textContent = 'Número de tarjeta debe tener entre 13 y 19 dígitos';
                    return;
                }

                const isValid = luhnCheck(cleanNumber);
                
                if (isValid) {
                    cardNumber.classList.add('is-valid');
                    cardNumber.classList.remove('is-invalid');
                    validElement.textContent = 'Número de tarjeta válido';
                } else {
                    cardNumber.classList.add('is-invalid');
                    cardNumber.classList.remove('is-valid');
                    errorElement.textContent = 'Número de tarjeta inválido';
                }
            }

            // Algoritmo de Luhn
            function luhnCheck(cardNumber) {
                let sum = 0;
                let alternate = false;
                
                for (let i = cardNumber.length - 1; i >= 0; i--) {
                    let n = parseInt(cardNumber.charAt(i), 10);
                    
                    if (alternate) {
                        n *= 2;
                        if (n > 9) {
                            n = (n % 10) + 1;
                        }
                    }
                    
                    sum += n;
                    alternate = !alternate;
                }
                
                return (sum % 10) === 0;
            }

            // Validar fecha de expiración
            function validateExpiryDate(expiry) {
                const errorElement = document.getElementById('expiryDateError');
                const expiryInput = document.getElementById('expiryDate');
                
                if (expiry.length === 0) {
                    expiryInput.classList.remove('is-invalid', 'is-valid');
                    return;
                }

                const match = expiry.match(/^(\d{2})\/(\d{2})$/);
                if (!match) {
                    expiryInput.classList.add('is-invalid');
                    expiryInput.classList.remove('is-valid');
                    errorElement.textContent = 'Formato debe ser MM/AA';
                    return;
                }

                const month = parseInt(match[1], 10);
                const year = parseInt(match[2], 10) + 2000;

                if (month < 1 || month > 12) {
                    expiryInput.classList.add('is-invalid');
                    expiryInput.classList.remove('is-valid');
                    errorElement.textContent = 'Mes inválido';
                    return;
                }

                const now = new Date();
                const expiryDate = new Date(year, month - 1);

                if (expiryDate <= now) {
                    expiryInput.classList.add('is-invalid');
                    expiryInput.classList.remove('is-valid');
                    errorElement.textContent = 'Tarjeta expirada';
                    return;
                }

                expiryInput.classList.add('is-valid');
                expiryInput.classList.remove('is-invalid');
            }

            // Validar CVV
            function validateCVV(cvvValue) {
                const errorElement = document.getElementById('cvvError');
                const cvvInput = document.getElementById('cvv');
                
                if (cvvValue.length === 0) {
                    cvvInput.classList.remove('is-invalid', 'is-valid');
                    return;
                }

                if (cvvValue.length >= 3 && cvvValue.length <= 4) {
                    cvvInput.classList.add('is-valid');
                    cvvInput.classList.remove('is-invalid');
                } else {
                    cvvInput.classList.add('is-invalid');
                    cvvInput.classList.remove('is-valid');
                    errorElement.textContent = 'CVV debe tener 3 o 4 dígitos';
                }
            }

            // Procesar formulario
            checkoutForm.addEventListener('submit', function(e) {
                e.preventDefault();
                
                const formData = new FormData(checkoutForm);
                const activePaymentMethod = document.querySelector('.payment-method-option.active');
                
                const paymentData = {
                    payment: {
                        type: activePaymentMethod.dataset.type,
                        cardNumber: formData.get('cardNumber'),
                        expiryDate: formData.get('expiryDate'),
                        cvv: formData.get('cvv'),
                        cardholderName: formData.get('cardholderName')
                    },
                    billing: {
                        firstName: formData.get('firstName'),
                        lastName: formData.get('lastName'),
                        email: formData.get('email'),
                        phone: formData.get('phone'),
                        address: formData.get('address'),
                        city: formData.get('city'),
                        postalCode: formData.get('postalCode'),
                        country: formData.get('country')
                    }
                };

                // Mostrar estado de procesamiento
                const submitButton = checkoutForm.querySelector('button[type="submit"]');
                const buttonText = submitButton.querySelector('.button-text');
                const loadingSpinner = submitButton.querySelector('.loading-spinner');
                
                submitButton.classList.add('processing');
                buttonText.style.display = 'none';
                loadingSpinner.style.display = 'inline';

                // Procesar pago
                fetch('/cart/process-payment', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(paymentData)
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        window.location.href = '/cart/success';
                    } else {
                        alert('Error: ' + data.message);
                        // Restaurar estado del botón
                        submitButton.classList.remove('processing');
                        buttonText.style.display = 'inline';
                        loadingSpinner.style.display = 'none';
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error al procesar el pago. Por favor, intente nuevamente.');
                    // Restaurar estado del botón
                    submitButton.classList.remove('processing');
                    buttonText.style.display = 'inline';
                    loadingSpinner.style.display = 'none';
                });
            });
        });
    </script>
</body>
</html>
